{"version":3,"file":"src_app_pages_entities_disease_disease_module_ts.js","mappings":"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","sources":["./src/app/pages/entities/disease/disease-update.ts","./src/app/pages/entities/disease/disease.module.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { NavController, Platform, ToastController } from '@ionic/angular';\r\nimport { HttpResponse, HttpErrorResponse } from '@angular/common/http';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { Disease } from './disease.model';\r\nimport { DiseaseService } from './disease.service';\r\nimport { Inspection, InspectionService } from '../inspection';\r\n\r\n@Component({\r\n  selector: 'page-disease-update',\r\n  templateUrl: 'disease-update.html',\r\n})\r\nexport class DiseaseUpdatePage implements OnInit {\r\n  disease: Disease;\r\n  inspections: Inspection[];\r\n  isSaving = false;\r\n  isNew = true;\r\n  isReadyToSave: boolean;\r\n\r\n  form = this.formBuilder.group({\r\n    id: [null, []],\r\n    name: [null, []],\r\n    description: [null, []],\r\n  });\r\n\r\n  constructor(\r\n    protected activatedRoute: ActivatedRoute,\r\n    protected navController: NavController,\r\n    protected formBuilder: FormBuilder,\r\n    public platform: Platform,\r\n    protected toastCtrl: ToastController,\r\n    private inspectionService: InspectionService,\r\n    private diseaseService: DiseaseService\r\n  ) {\r\n    // Watch the form for changes, and\r\n    this.form.valueChanges.subscribe(v => {\r\n      this.isReadyToSave = this.form.valid;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.inspectionService.query().subscribe(\r\n      data => {\r\n        this.inspections = data.body;\r\n      },\r\n      error => this.onError(error)\r\n    );\r\n    this.activatedRoute.data.subscribe(response => {\r\n      this.disease = response.data;\r\n      this.isNew = this.disease.id === null || this.disease.id === undefined;\r\n      this.updateForm(this.disease);\r\n    });\r\n  }\r\n\r\n  updateForm(disease: Disease) {\r\n    this.form.patchValue({\r\n      id: disease.id,\r\n      name: disease.name,\r\n      description: disease.description,\r\n    });\r\n  }\r\n\r\n  save() {\r\n    this.isSaving = true;\r\n    const disease = this.createFromForm();\r\n    if (!this.isNew) {\r\n      this.subscribeToSaveResponse(this.diseaseService.update(disease));\r\n    } else {\r\n      this.subscribeToSaveResponse(this.diseaseService.create(disease));\r\n    }\r\n  }\r\n\r\n  protected subscribeToSaveResponse(result: Observable<HttpResponse<Disease>>) {\r\n    result.subscribe(\r\n      (res: HttpResponse<Disease>) => this.onSaveSuccess(res),\r\n      (res: HttpErrorResponse) => this.onError(res.error)\r\n    );\r\n  }\r\n\r\n  async onSaveSuccess(response) {\r\n    let action = 'updated';\r\n    if (response.status === 201) {\r\n      action = 'created';\r\n    }\r\n    this.isSaving = false;\r\n    const toast = await this.toastCtrl.create({ message: `Disease ${action} successfully.`, duration: 2000, position: 'middle' });\r\n    await toast.present();\r\n    await this.navController.navigateBack('/tabs/entities/disease');\r\n  }\r\n\r\n  previousState() {\r\n    window.history.back();\r\n  }\r\n\r\n  async onError(error) {\r\n    this.isSaving = false;\r\n    console.error(error);\r\n    const toast = await this.toastCtrl.create({ message: 'Failed to load data', duration: 2000, position: 'middle' });\r\n    await toast.present();\r\n  }\r\n\r\n  private createFromForm(): Disease {\r\n    return {\r\n      ...new Disease(),\r\n      id: this.form.get(['id']).value,\r\n      name: this.form.get(['name']).value,\r\n      description: this.form.get(['description']).value,\r\n    };\r\n  }\r\n\r\n  compareInspection(first: Inspection, second: Inspection): boolean {\r\n    return first && first.id && second && second.id ? first.id === second.id : first === second;\r\n  }\r\n\r\n  trackInspectionById(index: number, item: Inspection) {\r\n    return item.id;\r\n  }\r\n}\r\n","import { NgModule, Injectable } from '@angular/core';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Routes, RouterModule, Resolve, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { UserRouteAccessService } from '../../../services/auth/user-route-access.service';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { Observable, of } from 'rxjs';\r\nimport { HttpResponse } from '@angular/common/http';\r\nimport { filter, map } from 'rxjs/operators';\r\n\r\nimport { DiseasePage } from './disease';\r\nimport { DiseaseUpdatePage } from './disease-update';\r\nimport { Disease, DiseaseService, DiseaseDetailPage } from '.';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class DiseaseResolve implements Resolve<Disease> {\r\n  constructor(private service: DiseaseService) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<Disease> {\r\n    const id = route.params.id ? route.params.id : null;\r\n    if (id) {\r\n      return this.service.find(id).pipe(\r\n        filter((response: HttpResponse<Disease>) => response.ok),\r\n        map((disease: HttpResponse<Disease>) => disease.body)\r\n      );\r\n    }\r\n    return of(new Disease());\r\n  }\r\n}\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: DiseasePage,\r\n    data: {\r\n      authorities: ['ROLE_USER'],\r\n    },\r\n    canActivate: [UserRouteAccessService],\r\n  },\r\n  {\r\n    path: 'new',\r\n    component: DiseaseUpdatePage,\r\n    resolve: {\r\n      data: DiseaseResolve,\r\n    },\r\n    data: {\r\n      authorities: ['ROLE_USER'],\r\n    },\r\n    canActivate: [UserRouteAccessService],\r\n  },\r\n  {\r\n    path: ':id/view',\r\n    component: DiseaseDetailPage,\r\n    resolve: {\r\n      data: DiseaseResolve,\r\n    },\r\n    data: {\r\n      authorities: ['ROLE_USER'],\r\n    },\r\n    canActivate: [UserRouteAccessService],\r\n  },\r\n  {\r\n    path: ':id/edit',\r\n    component: DiseaseUpdatePage,\r\n    resolve: {\r\n      data: DiseaseResolve,\r\n    },\r\n    data: {\r\n      authorities: ['ROLE_USER'],\r\n    },\r\n    canActivate: [UserRouteAccessService],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  declarations: [DiseasePage, DiseaseUpdatePage, DiseaseDetailPage],\r\n  imports: [IonicModule, FormsModule, ReactiveFormsModule, CommonModule, TranslateModule, RouterModule.forChild(routes)],\r\n})\r\nexport class DiseasePageModule {}\r\n"],"names":[],"sourceRoot":"webpack:///"}