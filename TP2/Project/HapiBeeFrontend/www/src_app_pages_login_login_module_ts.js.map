{"version":3,"file":"src_app_pages_login_login_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;;;;;AAA+C;AACN;AACI;AACU;AACV;AACS;AACb;AAEzC,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,kDAAS;KACrB;CACF,CAAC;IAMW,eAAe,SAAf,eAAe;CAAG;AAAlB,eAAe;IAJ3B,uDAAQ,CAAC;QACR,OAAO,EAAE,CAAC,yDAAY,EAAE,uDAAW,EAAE,uDAAW,EAAE,kEAAqB,CAAC,MAAM,CAAC,EAAE,gEAAe,CAAC;QACjG,YAAY,EAAE,CAAC,kDAAS,CAAC;KAC1B,CAAC;GACW,eAAe,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;ACnBsB;AACc;AACT;AACW;AACT;IAQ5C,SAAS,SAAT,SAAS;IAWpB,YACS,gBAAkC,EAClC,YAA0B,EAC1B,gBAAkC,EAClC,eAAgC,EAChC,aAA4B;QAJ5B,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,iBAAY,GAAZ,YAAY,CAAc;QAC1B,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,oBAAe,GAAf,eAAe,CAAiB;QAChC,kBAAa,GAAb,aAAa,CAAe;QAfrC,yCAAyC;QACzC,YAAO,GAAgE;YACrE,QAAQ,EAAE,EAAE;YACZ,QAAQ,EAAE,EAAE;YACZ,UAAU,EAAE,KAAK;SAClB,CAAC;IAWC,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;YACzD,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAChC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,OAAO;QACL,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CACxC,GAAG,EAAE;YACH,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,EAAC,eAAe,EAAE,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAC,CAAC,CAAC,SAAS,CACtF,IAAI,CAAC,EAAE;gBACL,IAAI,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC;gBAC3B,IAAI,UAAU,CAAC,MAAM,GAAG,CAAC,EAAC;oBACxB,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;iBAC1C;qBAAM;oBACL,IAAI,gBAAmC,CAAC;oBACxC,gBAAgB,GAAG,EAAE,KAAK,EAAG,EAAE,IAAI,EAAE,SAAS,EAAE,EAAE,WAAW,EAAG,EAAE,IAAI,EAAE,SAAS,EAAE,EAAE;oBACrF,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,8BAA8B,EAAE,gBAAgB,CAAC,CAAC;iBACnF;YACH,CAAC,CAAC,CAAC;QACP,CAAC,EACD,CAAM,GAAG,EAAC,EAAE,CAAC;YACX,mBAAmB;YACnB,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,EAAE,CAAC;YAC3B,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;gBAC9C,OAAO,EAAE,IAAI,CAAC,gBAAgB;gBAC9B,QAAQ,EAAE,IAAI;gBACd,QAAQ,EAAE,KAAK;aAChB,CAAC,CAAC;YACH,KAAK,CAAC,OAAO,EAAE,CAAC;QAClB,CAAC,EACF,CAAC;IACJ,CAAC;CACF;;YA9DQ,iEAAgB;YAChB,uEAAY;YACZ,iEAAgB;YAHD,2DAAe;YAA9B,yDAAa;;AAWT,SAAS;IALrB,wDAAS,CAAC;QACT,QAAQ,EAAE,WAAW;QACrB,kEAAgC;;KAEjC,CAAC;GACW,SAAS,CAoDrB;AApDqB","sources":["./src/app/pages/login/login.module.ts","./src/app/pages/login/login.page.ts"],"sourcesContent":["import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { LoginPage } from './login.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LoginPage,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [CommonModule, FormsModule, IonicModule, RouterModule.forChild(routes), TranslateModule],\r\n  declarations: [LoginPage],\r\n})\r\nexport class LoginPageModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { NavController, ToastController } from '@ionic/angular';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { LoginService } from '../../services/login/login.service';\r\nimport { BeekeeperService } from \"../entities/beekeeper\";\r\nimport { NavigationExtras} from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.page.html',\r\n  styleUrls: ['./login.page.scss'],\r\n})\r\nexport class LoginPage implements OnInit {\r\n  // The account fields for the login form.\r\n  account: { username: string; password: string; rememberMe: boolean } = {\r\n    username: '',\r\n    password: '',\r\n    rememberMe: false,\r\n  };\r\n\r\n  // Our translated text strings\r\n  private loginErrorString: string;\r\n\r\n  constructor(\r\n    public translateService: TranslateService,\r\n    public loginService: LoginService,\r\n    public beekeeperService: BeekeeperService,\r\n    public toastController: ToastController,\r\n    public navController: NavController\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.translateService.get('LOGIN_ERROR').subscribe(value => {\r\n      this.loginErrorString = value;\r\n    });\r\n  }\r\n\r\n  doLogin() {\r\n    this.loginService.login(this.account).then(\r\n      () => {\r\n        this.beekeeperService.query({'userId.equals': localStorage.getItem('userId')}).subscribe(\r\n          data => {\r\n            let beekeepers = data.body;\r\n            if (beekeepers.length > 0){\r\n              this.navController.navigateRoot('/tabs');\r\n            } else {\r\n              let navigationExtras : NavigationExtras;\r\n              navigationExtras = { state : { from: 'newUser' }, queryParams : { from: 'newUser' } }\r\n              this.navController.navigateRoot('/tabs/entities/beekeeper/new', navigationExtras);\r\n            }\r\n          });\r\n      },\r\n      async err => {\r\n        // Unable to log in\r\n        this.account.password = '';\r\n        const toast = await this.toastController.create({\r\n          message: this.loginErrorString,\r\n          duration: 3000,\r\n          position: 'top',\r\n        });\r\n        toast.present();\r\n      }\r\n    );\r\n  }\r\n}\r\n"],"names":[],"sourceRoot":"webpack:///"}