{"version":3,"file":"src_app_pages_entities_crest_crest_module_ts.js","mappings":"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","sources":["./src/app/pages/entities/crest/crest-detail.ts","./src/app/pages/entities/crest/crest-update.ts","./src/app/pages/entities/crest/crest.model.ts","./src/app/pages/entities/crest/crest.module.ts","./src/app/pages/entities/crest/crest.service.ts","./src/app/pages/entities/crest/crest.ts","./src/app/pages/entities/crest/index.ts","./src/app/pages/entities/hive/hive-detail.ts","./src/app/pages/entities/hive/hive.model.ts","./src/app/pages/entities/hive/hive.service.ts","./src/app/pages/entities/hive/hive.ts","./src/app/pages/entities/hive/index.ts","./src/app/services/offline/connectivity.service.ts","./src/app/services/offline/storage.service.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Crest } from './crest.model';\nimport { Hive } from '../hive/hive.model';\nimport { CrestState } from './crest.model';\nimport { CrestService } from './crest.service';\nimport { NavController, AlertController } from '@ionic/angular';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'page-crest-detail',\n  templateUrl: 'crest-detail.html',\n})\nexport class CrestDetailPage implements OnInit {\n  crest: Crest = {};\n  hiveDisplayed: Hive;\n  isFinalized = false;\n\n  constructor(\n    private navController: NavController,\n    private crestService: CrestService,\n    private activatedRoute: ActivatedRoute,\n    private alertController: AlertController\n  ) {}\n\n  ngOnInit(): void {\n    this.activatedRoute.data.subscribe(response => {\n      if(response.data.hive){\n        this.hiveDisplayed = response.data.hive\n      }\n\n      this.crest = response.data;\n\n      if(this.crest.state){\n        this.crest.state = CrestState[this.crest.state]\n      }\n\n      this.isFinalized = this.crest.state === CrestState.FINALIZED;\n    });\n  }\n\n  open(item: Crest) {\n    this.navController.navigateForward('/tabs/entities/crest/' + item.id + '/edit');\n  }\n\n  async deleteModal(item: Crest) {\n    const alert = await this.alertController.create({\n      header: 'Confirm the deletion?',\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel',\n          cssClass: 'secondary',\n        },\n        {\n          text: 'Delete',\n          handler: () => {\n            this.crestService.delete(item.id).subscribe(() => {\n              this.navController.navigateForward('/tabs/entities/crest');\n            });\n          },\n        },\n      ],\n    });\n    await alert.present();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { NavController, Platform, ToastController } from '@ionic/angular';\nimport { HttpResponse, HttpErrorResponse } from '@angular/common/http';\nimport { ActivatedRoute } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { Crest, CrestState } from './crest.model';\nimport { CrestService } from './crest.service';\nimport { Hive, HiveService } from '../hive';\nimport { NavigationExtras } from \"@angular/router\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: 'page-crest-update',\n  templateUrl: 'crest-update.html',\n})\nexport class CrestUpdatePage implements OnInit {\n  crest: Crest;\n  hives: Hive[];\n  initialDateDecantation: string;\n  finalDateDecantation: string;\n  isSaving = false;\n  isNew = true;\n  isFinalized = false;\n  isReadyToSave: boolean;\n\n  apiaryId: string;\n\n  form = this.formBuilder.group({\n    id: [null, []],\n    combFrameQuantity: [null, [Validators.required]],\n    waxWeight: [null, [Validators.required]],\n    timeWastedCentrifuge: [null, [Validators.required]],\n    initialDateDecantation: [null, [Validators.required]],\n    finalDateDecantation: [null, []],\n    producedHoneyQuantity: [null, []],\n    state: [null, [Validators.required]],\n    hiveId: [null, [Validators.required]],\n  });\n\n  constructor(\n    protected activatedRoute: ActivatedRoute,\n    protected navController: NavController,\n    protected formBuilder: FormBuilder,\n    public platform: Platform,\n    protected toastCtrl: ToastController,\n    private hiveService: HiveService,\n    private crestService: CrestService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) {\n    // Watch the form for changes, and\n    this.form.valueChanges.subscribe(v => {\n      this.isReadyToSave = this.form.valid;\n    });\n\n    this.route.queryParams.subscribe(params => {\n      this.apiaryId = params.apiaryId\n      if (this.router.getCurrentNavigation().extras.state) {\n        //this.from = this.router.getCurrentNavigation().extras.state.from;\n        //console.log(this.from)\n      }\n    });\n  }\n\n  ngOnInit() {\n    let req = {};\n    if (this.apiaryId ){\n      req = {'apiaryId.equals' : this.apiaryId}\n    }\n\n    this.hiveService.query(req).subscribe(\n      data => {\n        this.hives = data.body;\n      },\n      error => this.onError(error)\n    );\n    this.activatedRoute.data.subscribe(response => {\n      this.crest = response.data;\n      if(response.data.hive){\n        this.crest.hiveId = response.data.hive.id\n      }\n\n      this.isNew = this.crest.id === null || this.crest.id === undefined;\n      this.isFinalized = this.crest.state === CrestState.FINALIZED;\n\n      this.form.get('state').valueChanges.subscribe((value) => {\n        const finalDateDecantation = this.form.get('finalDateDecantation');\n        const producedHoneyQuantity = this.form.get('producedHoneyQuantity');\n\n        if (value === 'FINALIZED') {\n          finalDateDecantation.setValidators([Validators.required]);\n          producedHoneyQuantity.setValidators([Validators.required]);\n        } else {\n          finalDateDecantation.clearValidators();\n          producedHoneyQuantity.clearValidators();\n        }\n\n        finalDateDecantation.updateValueAndValidity();\n        producedHoneyQuantity.updateValueAndValidity();\n      });\n\n      this.updateForm(this.crest);\n    });\n  }\n\n  updateForm(crest: Crest) {\n    this.form.patchValue({\n      id: crest.id,\n      combFrameQuantity: crest.combFrameQuantity,\n      waxWeight: crest.waxWeight,\n      timeWastedCentrifuge: crest.timeWastedCentrifuge,\n      initialDateDecantation: this.isNew ? new Date().toISOString() : crest.initialDateDecantation,\n      finalDateDecantation: this.isNew ? new Date().toISOString() : crest.finalDateDecantation,\n      producedHoneyQuantity: crest.producedHoneyQuantity,\n      state: crest.state,\n      hiveId: crest.hiveId,\n    });\n  }\n\n  save() {\n    this.isSaving = true;\n    const crest = this.createFromForm();\n    if (!this.isNew) {\n      this.subscribeToSaveResponse(this.crestService.update(crest));\n    } else {\n      this.subscribeToSaveResponse(this.crestService.create(crest));\n    }\n  }\n\n  protected subscribeToSaveResponse(result: Observable<HttpResponse<Crest>>) {\n    result.subscribe(\n      (res: HttpResponse<Crest>) => this.onSaveSuccess(res),\n      (res: HttpErrorResponse) => this.onError(res.error)\n    );\n  }\n\n  async onSaveSuccess(response) {\n    let action = 'updated';\n    if (response.status === 201) {\n      action = 'created';\n    }\n    this.isSaving = false;\n    const toast = await this.toastCtrl.create({ message: `Crest ${action} successfully.`, duration: 2000, position: 'middle' });\n    await toast.present();\n    await this.navController.navigateBack('/tabs/entities/crest');\n  }\n\n  previousState() {\n    window.history.back();\n  }\n\n  async onError(error) {\n    this.isSaving = false;\n    console.error(error);\n    const toast = await this.toastCtrl.create({ message: 'Failed to load data', duration: 2000, position: 'middle' });\n    await toast.present();\n  }\n\n  private createFromForm(): Crest {\n    return {\n      ...new Crest(),\n      id: this.form.get(['id']).value,\n      combFrameQuantity: this.form.get(['combFrameQuantity']).value,\n      waxWeight: this.form.get(['waxWeight']).value,\n      timeWastedCentrifuge: this.form.get(['timeWastedCentrifuge']).value,\n      initialDateDecantation: new Date(this.form.get(['initialDateDecantation']).value),\n      finalDateDecantation: new Date(this.form.get(['finalDateDecantation']).value),\n      producedHoneyQuantity: this.form.get(['producedHoneyQuantity']).value,\n      state: this.form.get(['state']).value,\n      hiveId: this.form.get(['hiveId']).value,\n    };\n  }\n\n  compareHive(first: Hive, second: Hive): boolean {\n    return first && first.id && second && second.id ? first.id === second.id : first === second;\n  }\n\n  trackHiveById(index: number, item: Hive) {\n    return item.id;\n  }\n}\n","import { BaseEntity } from 'src/model/base-entity';\n\nexport enum CrestState {\n  DECANTATION = 'Decantação',\n  FINALIZED = 'Finalizado',\n}\n\nexport class Crest implements BaseEntity {\n  constructor(\n    public id?: number,\n    public combFrameQuantity?: number,\n    public waxWeight?: number,\n    public timeWastedCentrifuge?: number,\n    public initialDateDecantation?: any,\n    public finalDateDecantation?: any,\n    public producedHoneyQuantity?: number,\n    public state?: CrestState,\n    public hiveundefined?: string,\n    public hiveId?: number\n  ) {}\n}\n","import { NgModule, Injectable } from '@angular/core';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Routes, RouterModule, Resolve, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { UserRouteAccessService } from '../../../services/auth/user-route-access.service';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { Observable, of } from 'rxjs';\r\nimport { HttpResponse } from '@angular/common/http';\r\nimport { filter, map } from 'rxjs/operators';\r\n\r\nimport { CrestPage } from './crest';\r\nimport { CrestUpdatePage } from './crest-update';\r\nimport { Crest, CrestService, CrestDetailPage } from '.';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class CrestResolve implements Resolve<Crest> {\r\n  constructor(private service: CrestService) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<Crest> {\r\n    const id = route.params.id ? route.params.id : null;\r\n    if (id) {\r\n      return this.service.find(id).pipe(\r\n        filter((response: HttpResponse<Crest>) => response.ok),\r\n        map((crest: HttpResponse<Crest>) => crest.body)\r\n      );\r\n    }\r\n    return of(new Crest());\r\n  }\r\n}\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: CrestPage,\r\n    data: {\r\n      authorities: ['ROLE_USER'],\r\n    },\r\n    canActivate: [UserRouteAccessService],\r\n  },\r\n  {\r\n    path: 'new',\r\n    component: CrestUpdatePage,\r\n    resolve: {\r\n      data: CrestResolve,\r\n    },\r\n    data: {\r\n      authorities: ['ROLE_USER'],\r\n    },\r\n    canActivate: [UserRouteAccessService],\r\n  },\r\n  {\r\n    path: ':id/view',\r\n    component: CrestDetailPage,\r\n    resolve: {\r\n      data: CrestResolve,\r\n    },\r\n    data: {\r\n      authorities: ['ROLE_USER'],\r\n    },\r\n    canActivate: [UserRouteAccessService],\r\n  },\r\n  {\r\n    path: ':id/edit',\r\n    component: CrestUpdatePage,\r\n    resolve: {\r\n      data: CrestResolve,\r\n    },\r\n    data: {\r\n      authorities: ['ROLE_USER'],\r\n    },\r\n    canActivate: [UserRouteAccessService],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  declarations: [CrestPage, CrestUpdatePage, CrestDetailPage],\r\n  imports: [IonicModule, FormsModule, ReactiveFormsModule, CommonModule, TranslateModule, RouterModule.forChild(routes)],\r\n})\r\nexport class CrestPageModule {}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { ApiService } from '../../../services/api/api.service';\nimport { createRequestOption } from '../../../shared';\nimport { Crest } from './crest.model';\n\n@Injectable({ providedIn: 'root' })\nexport class CrestService {\n  private resourceUrl = ApiService.API_URL + '/crests';\n\n  constructor(protected http: HttpClient) {}\n\n  create(crest: Crest): Observable<HttpResponse<Crest>> {\n    return this.http.post<Crest>(this.resourceUrl, crest, { observe: 'response' });\n  }\n\n  update(crest: Crest): Observable<HttpResponse<Crest>> {\n    return this.http.put(`${this.resourceUrl}/${crest.id}`, crest, { observe: 'response' });\n  }\n\n  find(id: number): Observable<HttpResponse<Crest>> {\n    return this.http.get(`${this.resourceUrl}/${id}`, { observe: 'response' });\n  }\n\n  query(req?: any): Observable<HttpResponse<Crest[]>> {\n    const options = createRequestOption(req);\n    return this.http.get<Crest[]>(this.resourceUrl, { params: options, observe: 'response' });\n  }\n\n  queryByUser(req?: any): Observable<HttpResponse<Crest[]>> {\n    const options = createRequestOption(req);\n    return this.http.get<Crest[]>(this.resourceUrl + \"/byUser\", { params: options, observe: 'response' });\n  }\n\n  delete(id: number): Observable<HttpResponse<any>> {\n    return this.http.delete<any>(`${this.resourceUrl}/${id}`, { observe: 'response' });\n  }\n}\n","import { Component } from '@angular/core';\nimport { NavController, ToastController, Platform, IonItemSliding } from '@ionic/angular';\nimport { ActivatedRoute } from \"@angular/router\";\nimport { NavigationExtras } from \"@angular/router\";\nimport { Router } from \"@angular/router\";\nimport { filter, map } from 'rxjs/operators';\nimport { HttpResponse } from '@angular/common/http';\nimport { Crest, CrestState } from './crest.model';\nimport { CrestService } from './crest.service';\nimport { ConnectivityService } from '../../../services/offline/connectivity.service';\nimport { StorageService } from '../../../services/offline/storage.service';\n\n@Component({\n  selector: 'page-crest',\n  templateUrl: 'crest.html',\n})\nexport class CrestPage {\n  crests: Crest[];\n  apiaryId: string;\n  // todo: add pagination\n\n  constructor(\n    private navController: NavController,\n    private crestService: CrestService,\n    private toastCtrl: ToastController,\n    public plt: Platform,\n    private route: ActivatedRoute,\n    private router: Router,\n    private connectivityService: ConnectivityService,\n    private storageService: StorageService,\n  ) {\n    this.crests = [];\n    console.log(this.connectivityService.isOnline())\n    this.route.queryParams.subscribe(params => {\n      this.apiaryId = params.apiaryId\n      if (this.router.getCurrentNavigation().extras.state) {\n        //this.from = this.router.getCurrentNavigation().extras.state.from;\n        //console.log(this.from)\n      }\n    });\n\n  }\n\n  async ionViewWillEnter() {\n    await this.loadAll();\n  }\n\n  async loadAll(refresher?) {\n    if(this.connectivityService.isOnline()){\n    this.crestService\n      .queryByUser()\n      .pipe(\n        filter((res: HttpResponse<Crest[]>) => res.ok),\n        map((res: HttpResponse<Crest[]>) => res.body)\n      )\n      .subscribe(\n        (response: Crest[]) => {\n          this.crests = response;\n\n          this.crests.forEach(function(el){\n            if(el.state){\n              el.state = CrestState[el.state]\n            }\n          })\n          if (typeof refresher !== 'undefined') {\n            setTimeout(() => {\n              refresher.target.complete();\n            }, 750);\n          }\n        },\n        async error => {\n          console.error(error);\n          const toast = await this.toastCtrl.create({ message: 'Failed to load data', duration: 2000, position: 'middle' });\n          await toast.present();\n        }\n      );\n    } else {\n      const crests = this.storageService.getValue(\"crests\");\n      console.log(crests);\n    }\n  }\n\n  trackId(index: number, item: Crest) {\n    return item.id;\n  }\n\n  async new() {\n    await this.navController.navigateForward('/tabs/entities/crest/new');\n  }\n\n  async edit(item: IonItemSliding, crest: Crest) {\n    await this.navController.navigateForward('/tabs/entities/crest/' + crest.id + '/edit');\n    await item.close();\n  }\n\n  async delete(crest) {\n    this.crestService.delete(crest.id).subscribe(\n      async () => {\n        const toast = await this.toastCtrl.create({ message: 'Crest deleted successfully.', duration: 3000, position: 'middle' });\n        await toast.present();\n        await this.loadAll();\n      },\n      error => console.error(error)\n    );\n  }\n\n  async view(crest: Crest) {\n    await this.navController.navigateForward('/tabs/entities/crest/' + crest.id + '/view');\n  }\n}\n","export * from './crest.model';\r\nexport * from './crest.service';\r\nexport * from './crest-detail';\r\nexport * from './crest';\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Hive } from './hive.model';\r\nimport { HiveService } from './hive.service';\r\nimport { NavController, AlertController } from '@ionic/angular';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'page-hive-detail',\r\n  templateUrl: 'hive-detail.html',\r\n})\r\nexport class HiveDetailPage implements OnInit {\r\n  hive: Hive = {};\r\n\r\n  constructor(\r\n    private navController: NavController,\r\n    private hiveService: HiveService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private alertController: AlertController\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.activatedRoute.data.subscribe(response => {\r\n      this.hive = response.data;\r\n      this.hive.apiaryId = this.hive.apiary.id;\r\n    });\r\n  }\r\n\r\n  open(item: Hive) {\r\n    this.navController.navigateForward('/tabs/entities/hive/' + item.id + '/edit');\r\n  }\r\n\r\n  async deleteModal(item: Hive) {\r\n    const alert = await this.alertController.create({\r\n      header: 'Confirm the deletion?',\r\n      buttons: [\r\n        {\r\n          text: 'Cancel',\r\n          role: 'cancel',\r\n          cssClass: 'secondary',\r\n        },\r\n        {\r\n          text: 'Delete',\r\n          handler: () => {\r\n            this.hiveService.delete(item.id).subscribe(() => {\r\n              this.navController.navigateForward('/tabs/entities/hive');\r\n            });\r\n          },\r\n        },\r\n      ],\r\n    });\r\n    await alert.present();\r\n  }\r\n}\r\n","import { BaseEntity } from 'src/model/base-entity';\r\nimport { Crest } from '../crest/crest.model';\r\nimport { Unfolding } from '../unfolding/unfolding.model';\r\nimport { Frame } from '../frame/frame.model';\r\nimport { Inspection } from '../inspection/inspection.model';\r\nimport { TranshumanceRequest } from '../transhumance-request/transhumance-request.model';\r\nimport {Apiary} from \"../apiary\";\r\n\r\nexport class Hive implements BaseEntity {\r\n  constructor(\r\n    public id?: number,\r\n    public code?: string,\r\n    public apiaryundefined?: string,\r\n    public apiaryId?: number,\r\n    public apiary?: Apiary,\r\n    public crests?: Crest[],\r\n    public unfoldings?: Unfolding[],\r\n    public frames?: Frame[],\r\n    public inspections?: Inspection[],\r\n    public transhumanceRequests?: TranshumanceRequest[]\r\n  ) {}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { ApiService } from '../../../services/api/api.service';\r\nimport { createRequestOption } from '../../../shared';\r\nimport { Hive } from './hive.model';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class HiveService {\r\n  private resourceUrl = ApiService.API_URL + '/hives';\r\n\r\n  constructor(protected http: HttpClient) {}\r\n\r\n  create(hive: Hive): Observable<HttpResponse<Hive>> {\r\n    return this.http.post<Hive>(this.resourceUrl, hive, { observe: 'response' });\r\n  }\r\n\r\n  update(hive: Hive): Observable<HttpResponse<Hive>> {\r\n    return this.http.put(`${this.resourceUrl}/${hive.id}`, hive, { observe: 'response' });\r\n  }\r\n\r\n  find(id: number): Observable<HttpResponse<Hive>> {\r\n    return this.http.get(`${this.resourceUrl}/${id}`, { observe: 'response' });\r\n  }\r\n\r\n  query(req?: any): Observable<HttpResponse<Hive[]>> {\r\n    const options = createRequestOption(req);\r\n    return this.http.get<Hive[]>(this.resourceUrl, { params: options, observe: 'response' });\r\n  }\r\n\r\n  delete(id: number): Observable<HttpResponse<any>> {\r\n    return this.http.delete<any>(`${this.resourceUrl}/${id}`, { observe: 'response' });\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { NavController, ToastController, Platform, IonItemSliding } from '@ionic/angular';\r\nimport { filter, map } from 'rxjs/operators';\r\nimport { HttpResponse } from '@angular/common/http';\r\nimport { Hive } from './hive.model';\r\nimport { HiveService } from './hive.service';\r\nimport {ActivatedRoute, NavigationExtras, Router} from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'page-hive',\r\n  templateUrl: 'hive.html',\r\n})\r\nexport class HivePage {\r\n  hives: Hive[];\r\n  from: String;\r\n  apiaryId: string;\r\n\r\n  // todo: add pagination\r\n\r\n  constructor(\r\n    private navController: NavController,\r\n    private hiveService: HiveService,\r\n    private toastCtrl: ToastController,\r\n    public plt: Platform,\r\n    private route: ActivatedRoute,\r\n    private router: Router\r\n  ) {\r\n    this.hives = [];\r\n\r\n    this.route.queryParams.subscribe(params => {\r\n      this.from = params.from\r\n      this.apiaryId = params.apiaryId\r\n      if (this.router.getCurrentNavigation().extras.state) {\r\n        //this.from = this.router.getCurrentNavigation().extras.state.from;\r\n        //console.log(this.from)\r\n      }\r\n    });\r\n  }\r\n\r\n  async ionViewWillEnter() {\r\n    await this.loadAll();\r\n  }\r\n\r\n  async loadAll(refresher?) {\r\n    let queryParams = {};\r\n    if(!!this.apiaryId){\r\n      queryParams =  { 'apiaryId.equals': this.apiaryId };\r\n    }\r\n    this.hiveService\r\n      .query(queryParams)\r\n      .pipe(\r\n        filter((res: HttpResponse<Hive[]>) => res.ok),\r\n        map((res: HttpResponse<Hive[]>) => res.body)\r\n      )\r\n      .subscribe(\r\n        (response: Hive[]) => {\r\n          this.hives = response;\r\n          for (let i =0;i<this.hives.length;i++){\r\n            this.hives[i].apiaryId = this.hives[i].apiary.id;\r\n          }\r\n          if (typeof refresher !== 'undefined') {\r\n            setTimeout(() => {\r\n              refresher.target.complete();\r\n            }, 750);\r\n          }\r\n        },\r\n        async error => {\r\n          console.error(error);\r\n          const toast = await this.toastCtrl.create({ message: 'Failed to load data', duration: 2000, position: 'middle' });\r\n          await toast.present();\r\n        }\r\n      );\r\n  }\r\n\r\n  trackId(index: number, item: Hive) {\r\n    return item.id;\r\n  }\r\n\r\n  async new() {\r\n    await this.navController.navigateForward('/tabs/entities/hive/new');\r\n  }\r\n\r\n  async edit(item: IonItemSliding, hive: Hive) {\r\n    await this.navController.navigateForward('/tabs/entities/hive/' + hive.id + '/edit');\r\n    await item.close();\r\n  }\r\n\r\n  async delete(hive) {\r\n    this.hiveService.delete(hive.id).subscribe(\r\n      async () => {\r\n        const toast = await this.toastCtrl.create({ message: 'Hive deleted successfully.', duration: 3000, position: 'middle' });\r\n        await toast.present();\r\n        await this.loadAll();\r\n      },\r\n      error => console.error(error)\r\n    );\r\n  }\r\n\r\n  async view(hive: Hive) {\r\n    await this.navController.navigateForward('/tabs/entities/hive/' + hive.id + '/view');\r\n  }\r\n}\r\n","export * from './hive.model';\r\nexport * from './hive.service';\r\nexport * from './hive-detail';\r\nexport * from './hive';\r\n","import { Injectable } from '@angular/core';\n\nimport { Network } from '@ionic-native/network/ngx';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConnectivityService {\n  constructor(private network: Network) {\n\n    // Subscribe to network status changes\n    this.network.onDisconnect().subscribe(() => {\n      console.log('Disconnected from the internet');\n      // Handle disconnection if needed\n    });\n\n    this.network.onConnect().subscribe(() => {\n      console.log('Connected to the internet');\n      // Handle connection if needed\n    });\n  }\n\n  // Function to check if the device is online\n  isOnline(): boolean {\n    return this.network.type !== 'none';\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Storage } from '@ionic/storage-angular';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StorageService {\n  constructor(private storage: Storage) {\n    this.createStorage();\n  }\n\n  async createStorage() {\n    await this.storage.create();\n  }\n\n  // Functions to interact with storage\n  async setValue(key: string, value: any) {\n    await this.storage.set(key, value);\n  }\n\n  async getValue(key: string) {\n    return await this.storage.get(key);\n  }\n}\n"],"names":[],"sourceRoot":"webpack:///"}